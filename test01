import os

# 사용자 데이터 및 작업 데이터 파일
USER_FILE = "user_data.txt"
TASK_FILE = "task_data.txt"


# 사용자 등록 함수
def register_user():
    user_id = input("ID를 입력하세요: ")
    password = input("비밀번호를 입력하세요: ")
    name = input("이름을 입력하세요: ")
    age = input("나이를 입력하세요: ")
    gender = input("성별을 입력하세요 (남/여): ")
    birthday = input("생일을 입력하세요 (YYYY-MM-DD): ")

    with open(USER_FILE, "a", encoding="utf-8") as file:
        file.write(f"{user_id},{password},{name},{age},{gender},{birthday}\n")
    print("회원가입이 완료되었습니다!")


# 사용자 로그인 함수
def login_user():
    user_id = input("ID를 입력하세요: ")
    password = input("비밀번호를 입력하세요: ")

    try:
        with open(USER_FILE, "r", encoding="utf-8") as file:
            users = file.readlines()
            for user in users:
                stored_id, stored_pw, _, _, _, _ = user.strip().split(",")
                if user_id == stored_id and password == stored_pw:
                    print("로그인 성공!")
                    return user_id
            print("ID 또는 비밀번호가 틀렸습니다.")
            return None
    except FileNotFoundError:
        print("등록된 사용자가 없습니다. 먼저 회원가입을 해주세요.")
        return None


# 작업 추가 함수
def create_task(user_id):
    task_name = input("작업 이름을 입력하세요: ")
    description = input("작업 내용을 입력하세요: ")
    start_date = input("시작 날짜를 입력하세요 (YYYY-MM-DD): ")
    end_date = input("종료 날짜를 입력하세요 (YYYY-MM-DD): ")
    assignee = input("작업자를 입력하세요: ")

    if not is_valid_user(assignee):
        print("존재하지 않는 작업자입니다!")
        return

    with open(TASK_FILE, "a", encoding="utf-8") as file:
        file.write(f"{task_name},{description},{start_date},{end_date},{assignee},TODO\n")
    print("작업이 성공적으로 추가되었습니다!")


# 작업 수정 함수
def modify_task(user_id):
    task_name = input("수정할 작업 이름을 입력하세요: ")

    tasks = []
    task_found = False

    try:
        with open(TASK_FILE, "r", encoding="utf-8") as file:
            tasks = file.readlines()

        with open(TASK_FILE, "w", encoding="utf-8") as file:
            for task in tasks:
                task_data = task.strip().split(",")
                if task_data[0] == task_name:
                    task_found = True
                    print("작업을 수정합니다.")
                    task_data[1] = input("새 작업 내용을 입력하세요: ")
                    task_data[2] = input("새 시작 날짜를 입력하세요 (YYYY-MM-DD): ")
                    task_data[3] = input("새 종료 날짜를 입력하세요 (YYYY-MM-DD): ")
                    task_data[4] = input("새 작업자를 입력하세요: ")
                    if not is_valid_user(task_data[4]):
                        print("존재하지 않는 작업자입니다!")
                        return
                    task_data[5] = input("새 작업 상태를 입력하세요 (TODO, IN_PROGRESS, DONE): ")
                    file.write(",".join(task_data) + "\n")
                else:
                    file.write(task)
        if task_found:
            print("작업이 성공적으로 수정되었습니다!")
        else:
            print("작업을 찾을 수 없습니다.")
    except FileNotFoundError:
        print("작업 데이터 파일이 없습니다.")


# 특정 상태의 작업 보기 함수
def view_tasks_by_status(user_id, status):
    try:
        with open(TASK_FILE, "r", encoding="utf-8") as file:
            tasks = file.readlines()
            print(f"\n{status} 작업 목록:")
            for task in tasks:
                task_data = task.strip().split(",")
                if task_data[4] == user_id and task_data[5] == status:
                    print(f"- 작업 이름: {task_data[0]}, 내용: {task_data[1]}, 시작: {task_data[2]}, 종료: {task_data[3]}")
    except FileNotFoundError:
        print("작업 데이터 파일이 없습니다.")


# 사용자 유효성 검사
def is_valid_user(user_id):
    try:
        with open(USER_FILE, "r", encoding="utf-8") as file:
            users = file.readlines()
            for user in users:
                stored_id, _, _, _, _, _ = user.strip().split(",")
                if user_id == stored_id:
                    return True
        return False
    except FileNotFoundError:
        return False


# 메인 함수
def main():
    while True:
        print("\n1. 회원가입")
        print("2. 로그인")
        print("3. 종료")
        choice = input("선택하세요: ")

        if choice == "1":
            register_user()
        elif choice == "2":
            logged_in_user = login_user()
            if logged_in_user:
                while True:
                    print("\n1. 작업 만들기")
                    print("2. 작업 수정하기")
                    print("3. 해야 할 일 보기")
                    print("4. 진행 중 작업 보기")
                    print("5. 완료된 작업 보기")
                    print("6. 로그아웃")
                    task_choice = input("선택하세요: ")

                    if task_choice == "1":
                        create_task(logged_in_user)
                    elif task_choice == "2":
                        modify_task(logged_in_user)
                    elif task_choice == "3":
                        view_tasks_by_status(logged_in_user, "TODO")
                    elif task_choice == "4":
                        view_tasks_by_status(logged_in_user, "IN_PROGRESS")
                    elif task_choice == "5":
                        view_tasks_by_status(logged_in_user, "DONE")
                    elif task_choice == "6":
                        print("로그아웃되었습니다.")
                        break
                    else:
                        print("잘못된 입력입니다. 다시 시도하세요.")
        elif choice == "3":
            print("프로그램을 종료합니다.")
            break
        else:
            print("잘못된 입력입니다. 다시 시도하세요.")


if __name__ == "__main__":
    main()
